name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, beta, nightly]
        features: ['']
        include:
        - os: ubuntu-latest
          rust: nightly
          features: nightly
        - os: windows-latest
          rust: nightly
          features: nightly
        - os: macOS-latest
          rust: nightly
          features: nightly
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
    - name: build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --no-default-features --features="${{ matrix.features }}"
    - name: test --tests
      run: cargo test --verbose --tests --no-default-features --features="$FEATURES"
    - name: test --doc
      run: cargo test --verbose --doc --no-default-features --features="$FEATURES"
    - name: doc
      run: cargo doc --verbose --no-default-features --features="$FEATURES"
    - name: test --docsrs
      run: cargo test --verbose --doc
      env:
        RUSTFLAGS: "--cfg docsrs"
        RUSTDOCFLAGS: "--cfg docsrs"
      if: "${{ matrix.rust == 'nightly' }}"
    - name: --docsrs
      run: cargo doc --verbose
      env:
        RUSTFLAGS: "--cfg docsrs"
        RUSTDOCFLAGS: "--cfg docsrs"
      if: "${{ matrix.rust == 'nightly' }}"
    - name: build --release
      run: cargo build --verbose --release --no-default-features --features="$FEATURES"
